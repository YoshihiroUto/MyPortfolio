<!-- articles/index.html.erb -->
<%= form_with(model: @article, local: true) do |f| %>
  <%= render 'layouts/error_messages', model: f.object %>
  <div class="form-group">
    <div class="container w-100">
      <div id='editor'>
        <div class="row">
          <div class="col-md-6">
            <div class="form-group">
              <%= f.label :category_id, "カテゴリ" %>
              <%= f.collection_select(:category_id, @categories, :id, :name, :include_blank => "-未分類-") %>
            </div>
            
            <div class="form-group">
              <%= f.label :image, 'アイキャッチ画像' %>
              <%= f.file_field :image %>
            </div>
            
            <div class="form-group">
              <%= f.label :title, '記事タイトル' %>
              <%= f.text_field :title %>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-md-6">
            <%= f.text_area :content, rows: 20, class: 'form-control', id: 'article_content', "v-model" => "input", name: "article[content]" %>
          </div>
          <div class="col-md-6">
            <div id="preview-field" class="content markdown-field" v-html="convertMarkdown"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <%= link_to '記事一覧ページに戻る', articles_path, class: 'btn btn-secondary' %>
  <%= f.submit '新規記事作成', class: 'btn btn-primary' %>
  
<% end %>

<script>
  $(document).on('turbolinks:load', function() {
    
    // リアルタイムプレビュー
    new Vue({
      el: '#editor',// index.htmlでid="editor"となっている要素（エレメント）を指定
      data: {
        // index.htmlでv-model="input"が付与されている要素と双方向データバインディングされている。
        input: document.querySelector("[v-model='input']").value, 
      },
      computed: {
        convertMarkdown: function() {
          // index.htmlでv-html="convertMarkdown"が付与されている要素（エレメント）とバインディングされている。
          // 入力されたデータをHTMLに変換して表示させる。
          return marked(this.input);
        }
      }
    });
    
  });
</script>